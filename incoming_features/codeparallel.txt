from tqdm import tqdm
from joblib import Parallel, delayed
from qutip import *

xxlen = 1001
xx_list = np.linspace(5, 7, xxlen)

def simulate(parameter):
    H = fHamiltonian(4, 5, parameter, 4.7, -0.24, -0.14, -0.24, 0.006, 0.11, 0.11)
    eigvals = H.eigenenergies()[1] / (2 * np.pi)
    return eigvals

# 使用concurrent.futures库创建进度条
with tqdm(total=len(xx_list), ncols=80) as pbar:
    with Parallel(n_jobs=-1, backend='loky') as parallel:
        results = parallel(delayed(simulate)(xx) for xx in tqdm(xx_list, leave=False))    
        pbar.update(len(xx_list))  # 更新进度条



# 处理结果
# for parameter, eigvals in zip(xx_list, results):
#     print(f'Parameter: {parameter}, Eigenvalues: {eigvals}')


